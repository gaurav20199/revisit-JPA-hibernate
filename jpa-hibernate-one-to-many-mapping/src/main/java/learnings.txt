One To Many Mapping
They can be UniDirectional as well as BiDirectional.

UniDirectional One To Many Mapping
In One to Many Mapping ownership is always at the many side(here it is comment side)
There can be 2 ways to represent one to many unidirectional mapping::
1) Unidirectional relationship from the Comment side(Comment becomes the owner of the relationship)
2) Comment is still the owner of the Relationship but writing Relationship from the opposite side of the ownership.

Establishing Relationship from Post side But Comment is still owner.
1) Defining just one to many mapping from Post side where comment still holds the ownership will lead to generation of
extra tables in db. So one to many mapping from Code side(Object side) will appear to be a many-to-many mapping from db.
Reason is:: There is no way for Hibernate to know how to create Foreign Key since JPA implementation(Hibernate)
don't know how to create foreign key when owner is on opposite side and Relationship is established from diff end.
The third table created by Hibernate is known as Join Table.
IMP::
2) To Mitigate the above issue, we will have to tell Hibernate which is the foreign key by using the Join Column
annotation. This is the only time JoinColumn annotation is used on an entity who is not the Owner.

Where should Foreign Key be??
Foreign key should be always at the ownership side.
It usually should be on the many side, and it makes sense as well if seen from SQL pov as well.
In this case since we are saying One Post can have many comments so Foreign Key will be on Comment side.
Foreign key will be Generated by Hibernate if join column info is not provided.